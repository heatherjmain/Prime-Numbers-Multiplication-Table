{"version":3,"sources":["webpack:///webpack/bootstrap fee0b397ce18c6fc5ccb","webpack:///./src/app.js","webpack:///./src/models/prime_tables.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,CAAC;;;;;;;ACpCD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fee0b397ce18c6fc5ccb","var displayPrimeTable = require(\"./models/prime_tables.js\")\n\nwindow.addEventListener(\"load\", function() {\n  var run = new displayPrimeTable()\n\n  displayPrimeTable.prototype.render = function() {\n    let button = document.getElementById(\"submit-button\")\n\n    button.addEventListener(\"click\", function() {\n      let userInputField = document.getElementById(\"user-input\")\n      let requestedNumber = parseInt(userInputField.value)\n      // console.log(\"user input\", requestedNumber)\n\n      let table = run.makeGrid(requestedNumber)\n      // console.log(\"table\", table)\n\n      let tableWrapper = document.getElementById(\"table-wrapper\")\n      let primesTable = document.createElement(\"table\")\n\n      for (let row of table) {\n        let tableRow = document.createElement(\"tr\")\n\n        for (element of row) {\n          let number = document.createElement(\"td\")\n          let value = document.createTextNode(element)\n          \n          number.appendChild(value)\n          tableRow.appendChild(number)\n          primesTable.appendChild(tableRow)\n          tableWrapper.appendChild(primesTable)\n        }\n\n      }\n    })\n  }\n  run.render()\n})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app.js\n// module id = 0\n// module chunks = 0","var PrimeTable = function() {\n  this.primes = []\n  this.grid = []\n}\n\n// helper function to determine whether n is prime\nPrimeTable.prototype.isPrime = function(n) {\n  // divide n by each number smaller than n\n  // no need to include 1 - start at 2\n  // no need to include n\n  let i\n\n  for (i = 2; i < n; i++) {\n    if (n % i === 0) {\n      // if divisible by any other number then not prime\n      return false\n    }\n  }\n  // n=2 automatically returns true as i starts at 2 so is never less than n\n  return true\n}\n\n\n// helper function to list n prime numbers\nPrimeTable.prototype.findPrimeNumbers = function(n) {\n  // 1 has to be pushed in as the 1st element as this is used to calculate multiplication when making the grid - if 0 or empty string used, then the first element in every row would be 0\n  this.primes.push(1)\n\n  // 2 is the first prime number and should be the first number pushed into the array\n  let i = 2\n\n  // loop untill length of array = n+1\n  while (this.primes.length < n + 1) {\n    if (this.isPrime(i)) {\n      this.primes.push(i)\n    }\n    i++\n  }\n  // console.log(\"primes\", this.primes)\n  return this.primes\n}\n\n\n// helper function to create matrix\n// args used as length of array will vary each time\nfunction matrix(args) {\n  // create primesArray to hold this.primes info (passed in as args) as otherwise unable to access - this is a temporary array to be used to create grid\n  let primesArray = []\n\n  // loop through args(this.primes) and push each element into primesArray\n  for (let i = 0; i < args.length; i++) {\n    // loop through args, pushing each element into a temporary array\n    primesArray.push(args[i])\n  }\n\n  // primesMulitplication will contain array of arrays which makes up the whole grid\n  let primesMultiplication = []\n  primesMultiplication.push(primesArray)\n\n  // start at 1st element of primesArray as 0 element is empty string\n  for (let i = 1; i < primesArray.length; i++) {\n    // multiply array will collect the multiplied numbers for each row\n    // this creates an array which will make up each row\n    let multiply = []\n\n    for (let j = 0; j < primesArray.length; j++) {\n      multiply.push(primesArray[i] * primesArray[j])\n    }\n    primesMultiplication.push(multiply)\n  }\n  // console.log(\"primesMultiplication\", primesMultiplication);\n\n  // chnage 1st element to empty string as 1 is not a prime number\n  primesMultiplication[0][0] = \"\"\n  return primesMultiplication\n}\n\nPrimeTable.prototype.makeGrid = function(n) {\n  this.findPrimeNumbers(n)\n  // grid attribute required in constructor\n  // grid will be an array of arrays\n  this.grid = matrix(this.primes)\n  // console.log(\"grid\", this.grid)\n  return this.grid\n}\n\n// TEST\n// var run = new PrimeTable\n// run.makeGrid(3)\n\n\nmodule.exports = PrimeTable\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/prime_tables.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}